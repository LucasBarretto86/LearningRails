# syntax=docker/dockerfile:1
# check=error=true

# Base image with the correct Ruby version
ARG RUBY_VERSION=3.3.0
FROM docker.io/library/ruby:$RUBY_VERSION-slim AS base

# Set working directory for the Rails app
WORKDIR /rails

# Install base packages
# LUCAS: For Postgres: postgresql-client libpq-dev
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y curl libjemalloc2 libvips postgresql-client libpq-dev && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Set production environment
ENV RAILS_ENV="development"

# Throw-away build stage to reduce the final image size
FROM base AS build

# Install packages needed to build gems
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential git pkg-config && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Install application gems
COPY Gemfile Gemfile.lock ./
RUN bundle install

# Copy application code
COPY . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/

# Final stage for the app image
FROM base

# Copy installed gems and app code from the build stage
COPY --from=build /usr/local/bundle /usr/local/bundle
COPY --from=build /rails /rails

# LUCAS: Need to install gems before define the non-root user
RUN gem install foreman

# Create a non-root user for security and set up necessary directories
RUN groupadd --system --gid 1000 rails && \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash && \
    chown -R rails:rails db log storage tmp
USER 1000:1000

EXPOSE 3000

# Entrypoint prepares the database.
ENTRYPOINT ["/rails/bin/docker-entrypoint"]

# Expose port for Rails app
CMD ["foreman", "start"]

# ---------------------------------------------------
# ** IF YOU DON'T HAVE docker-entrypoint.sh FILE: **
# ---------------------------------------------------

# If there is no `/rails/bin/docker-entrypoint` file, you can handle database preparation directly
# in the `CMD` line as follows. This will ensure `rails db:prepare` is run before the Rails server
# starts:

# CMD ["sh", "-c", "bundle exec rails db:prepare && foreman start"]

